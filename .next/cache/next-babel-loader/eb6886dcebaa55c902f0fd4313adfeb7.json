{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport { dbInstance } from \"../../src/dbCon\";\nimport Cors from \"micro-cors\";\n\nvar dateFormat = require(\"dateformat\");\n\nconst cors = Cors();\n\nfunction handler(req, res) {\n  // const posts = postList(); //array of post obj\n  let firestore = dbInstance();\n  let posts = [];\n  firestore.collection(\"blogs\").orderBy(\"blogTime\", \"desc\").get().then(snapshot => {\n    snapshot.forEach(doc => {\n      let blogSlug = doc.id;\n      let blogInfo = doc.data();\n      let blogObj = {\n        title: blogInfo.blogName,\n        slug: blogSlug,\n        details: blogInfo.blogDetail,\n        date: dateFormat(blogInfo.blogTime, \"mmmm dS, yyyy\")\n      };\n      posts.push(blogObj);\n    }); // to get all posts (eg. post list of write page)\n\n    if (req.query.page === undefined) {\n      res.status(200).json({\n        posts: posts\n      });\n    } else {\n      // Pagination purpose\n      let page = _parseInt(req.query.page, 10);\n\n      let firstIndex = 9 * (page - 1);\n      let lastIndex = 9 * page;\n\n      if (lastIndex > posts.length) {\n        lastIndex = posts.length;\n      }\n\n      res.status(200).json({\n        posts: posts.slice(firstIndex, lastIndex),\n        postCount: posts.length\n      });\n    }\n  }).catch(error => console.log(\"error on getting posts\", error));\n}\n\nexport default cors(handler);","map":null,"metadata":{},"sourceType":"module"}