{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport { dbInstance } from \"../../src/dbCon\";\n\nvar dateFormat = require(\"dateformat\");\n\nexport default ((req, res) => {\n  // const posts = postList(); //array of post obj\n  let firestore = dbInstance();\n  let posts = [];\n  firestore.collection(\"blogs\").orderBy(\"blogTime\", \"desc\").get().then(snapshot => {\n    snapshot.forEach(doc => {\n      let blogSlug = doc.id;\n      let blogInfo = doc.data();\n      let blogObj = {\n        title: blogInfo.blogName,\n        slug: blogSlug,\n        details: blogInfo.blogDetail,\n        date: dateFormat(blogInfo.blogTime, \"mmmm dS, yyyy, h:MM:ss TT\")\n      };\n      posts.push(blogObj);\n    });\n\n    let page = _parseInt(req.query.page, 10);\n\n    let firstIndex = 5 * (page - 1);\n    let lastIndex = 5 * page;\n\n    if (lastIndex > posts.length) {\n      lastIndex = posts.length;\n    }\n\n    res.end(_JSON$stringify({\n      posts: posts.slice(firstIndex, lastIndex),\n      postCount: posts.length\n    })); // res.status(200).json({\n    //   posts: posts.slice(firstIndex, lastIndex),\n    //   postCount: posts.length\n    // });\n  });\n  res.end(_JSON$stringify({\n    posts: posts.slice(firstIndex, lastIndex),\n    postCount: posts.length\n  })); // console.log(posts);\n});","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/api/posts.js"],"names":["dbInstance","dateFormat","require","req","res","firestore","posts","collection","orderBy","get","then","snapshot","forEach","doc","blogSlug","id","blogInfo","data","blogObj","title","blogName","slug","details","blogDetail","date","blogTime","push","page","query","firstIndex","lastIndex","length","end","slice","postCount"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,iBAA3B;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B;AACA,MAAIC,SAAS,GAAGL,UAAU,EAA1B;AACA,MAAIM,KAAK,GAAG,EAAZ;AACAD,EAAAA,SAAS,CACNE,UADH,CACc,OADd,EAEGC,OAFH,CAEW,UAFX,EAEuB,MAFvB,EAGGC,GAHH,GAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,GAAG,IAAI;AACtB,UAAIC,QAAQ,GAAGD,GAAG,CAACE,EAAnB;AACA,UAAIC,QAAQ,GAAGH,GAAG,CAACI,IAAJ,EAAf;AAEA,UAAIC,OAAO,GAAG;AACZC,QAAAA,KAAK,EAAEH,QAAQ,CAACI,QADJ;AAEZC,QAAAA,IAAI,EAAEP,QAFM;AAGZQ,QAAAA,OAAO,EAAEN,QAAQ,CAACO,UAHN;AAIZC,QAAAA,IAAI,EAAEvB,UAAU,CAACe,QAAQ,CAACS,QAAV,EAAoB,2BAApB;AAJJ,OAAd;AAMAnB,MAAAA,KAAK,CAACoB,IAAN,CAAWR,OAAX;AACD,KAXD;;AAYA,QAAIS,IAAI,GAAG,UAASxB,GAAG,CAACyB,KAAJ,CAAUD,IAAnB,EAAyB,EAAzB,CAAX;;AACA,QAAIE,UAAU,GAAG,KAAKF,IAAI,GAAG,CAAZ,CAAjB;AACA,QAAIG,SAAS,GAAG,IAAIH,IAApB;;AACA,QAAIG,SAAS,GAAGxB,KAAK,CAACyB,MAAtB,EAA8B;AAC5BD,MAAAA,SAAS,GAAGxB,KAAK,CAACyB,MAAlB;AACD;;AACD3B,IAAAA,GAAG,CAAC4B,GAAJ,CACE,gBAAe;AACb1B,MAAAA,KAAK,EAAEA,KAAK,CAAC2B,KAAN,CAAYJ,UAAZ,EAAwBC,SAAxB,CADM;AAEbI,MAAAA,SAAS,EAAE5B,KAAK,CAACyB;AAFJ,KAAf,CADF,EAnBgB,CAyBhB;AACA;AACA;AACA;AACD,GAjCH;AAkCA3B,EAAAA,GAAG,CAAC4B,GAAJ,CACE,gBAAe;AACb1B,IAAAA,KAAK,EAAEA,KAAK,CAAC2B,KAAN,CAAYJ,UAAZ,EAAwBC,SAAxB,CADM;AAEbI,IAAAA,SAAS,EAAE5B,KAAK,CAACyB;AAFJ,GAAf,CADF,EAtC2B,CA4C3B;AACD,CA7CD","sourcesContent":["import { dbInstance } from \"../../src/dbCon\";\nvar dateFormat = require(\"dateformat\");\n\nexport default (req, res) => {\n  // const posts = postList(); //array of post obj\n  let firestore = dbInstance();\n  let posts = [];\n  firestore\n    .collection(\"blogs\")\n    .orderBy(\"blogTime\", \"desc\")\n    .get()\n    .then(snapshot => {\n      snapshot.forEach(doc => {\n        let blogSlug = doc.id;\n        let blogInfo = doc.data();\n\n        let blogObj = {\n          title: blogInfo.blogName,\n          slug: blogSlug,\n          details: blogInfo.blogDetail,\n          date: dateFormat(blogInfo.blogTime, \"mmmm dS, yyyy, h:MM:ss TT\")\n        };\n        posts.push(blogObj);\n      });\n      let page = parseInt(req.query.page, 10);\n      let firstIndex = 5 * (page - 1);\n      let lastIndex = 5 * page;\n      if (lastIndex > posts.length) {\n        lastIndex = posts.length;\n      }\n      res.end(\n        JSON.stringify({\n          posts: posts.slice(firstIndex, lastIndex),\n          postCount: posts.length\n        })\n      );\n      // res.status(200).json({\n      //   posts: posts.slice(firstIndex, lastIndex),\n      //   postCount: posts.length\n      // });\n    });\n  res.end(\n    JSON.stringify({\n      posts: posts.slice(firstIndex, lastIndex),\n      postCount: posts.length\n    })\n  );\n  // console.log(posts);\n};\n"]},"metadata":{},"sourceType":"module"}