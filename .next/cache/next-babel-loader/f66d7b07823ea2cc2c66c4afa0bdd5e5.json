{"ast":null,"code":"const firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-auth\"); // TODO: move config to .env\n\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  // projectId: (`${process.env.REACT_APP_FIREBASE_PROJECT_ID}`),\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n}; // Initialize Firebase\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} // firebase.analytics();\n//instances\n\n\nconst firestore = firebase.firestore();\nconst auth = firebase.auth(); //methods\n\nexport const authInstance = () => auth;\nexport const dbInstance = () => firestore; // auth.onAuthStateChanged(user => {\n//   if (user) {\n//     console.log(user.email);\n//   } else {\n//     // console.log(\"user is signed out\");\n//     console.log(\"signed out\");\n//   }\n// });\n// check logged in info\n\nexport const checkUser = () => {\n  console.log(auth.currentUser);\n\n  if (auth.currentUser === null) {\n    return false;\n  } else {\n    return true;\n  }\n\n  return auth.currentUser ? true : false;\n};\nvar currentUser = null;\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (user) {\n    currentUser = true;\n  } else {// No user is signed in.\n  }\n}); //TODO: registerdaki ve signindeki fonkları buraya taşı\n// add blog posts to database\n\nexport default function addDb(data) {\n  const docRef = firestore.collection(\"blogs\").doc(data.blogSlug);\n  docRef.set({\n    blogName: data.blogName,\n    blogDetail: data.blogDetail\n  }).then(() => console.log(\"Saved\")).catch(error => console.log(\"Got an error:\" + error));\n}","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/src/dbCon.js"],"names":["firebase","require","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","apps","length","initializeApp","firestore","auth","authInstance","dbInstance","checkUser","console","log","currentUser","onAuthStateChanged","user","addDb","data","docRef","collection","doc","blogSlug","set","blogName","blogDetail","then","catch","error"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,wBAAD,CAAP,C,CAEA;;;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADD;AAEnBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFL;AAGnBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,+BAHN;AAInB;AACAC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,6BALJ;AAMnBC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,iCANR;AAOnBC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,sCAPZ;AAQnBC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,yBARA;AASnBC,EAAAA,aAAa,EAAEf,OAAO,CAACC,GAAR,CAAYe;AATR,CAArB,C,CAYA;;AACA,IAAI,CAACpB,QAAQ,CAACqB,IAAT,CAAcC,MAAnB,EAA2B;AACzBtB,EAAAA,QAAQ,CAACuB,aAAT,CAAuBrB,cAAvB;AACD,C,CACD;AAEA;;;AACA,MAAMsB,SAAS,GAAGxB,QAAQ,CAACwB,SAAT,EAAlB;AACA,MAAMC,IAAI,GAAGzB,QAAQ,CAACyB,IAAT,EAAb,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAMD,IAA3B;AAEP,OAAO,MAAME,UAAU,GAAG,MAAMH,SAAzB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,WAAjB;;AACA,MAAGN,IAAI,CAACM,WAAL,KAAqB,IAAxB,EAA6B;AAC3B,WAAO,KAAP;AACD,GAFD,MAGK;AACH,WAAO,IAAP;AACD;;AACD,SAAON,IAAI,CAACM,WAAL,GAAmB,IAAnB,GAA0B,KAAjC;AACD,CATM;AAWP,IAAIA,WAAW,GAAG,IAAlB;AAEA/B,QAAQ,CAACyB,IAAT,GAAgBO,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAChD,MAAIA,IAAJ,EAAU;AACRF,IAAAA,WAAW,GAAG,IAAd;AACD,GAFD,MAEO,CACL;AACD;AACF,CAND,E,CAQA;AAEA;;AACA,eAAe,SAASG,KAAT,CAAeC,IAAf,EAAqB;AAClC,QAAMC,MAAM,GAAGZ,SAAS,CAACa,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,IAAI,CAACI,QAAvC,CAAf;AAEAH,EAAAA,MAAM,CACHI,GADH,CACO;AACHC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QADZ;AAEHC,IAAAA,UAAU,EAAEP,IAAI,CAACO;AAFd,GADP,EAKGC,IALH,CAKQ,MAAMd,OAAO,CAACC,GAAR,CAAY,OAAZ,CALd,EAMGc,KANH,CAMSC,KAAK,IAAIhB,OAAO,CAACC,GAAR,CAAY,kBAAkBe,KAA9B,CANlB;AAOD","sourcesContent":["const firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\nrequire(\"firebase/firebase-auth\");\n\n// TODO: move config to .env\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  // projectId: (`${process.env.REACT_APP_FIREBASE_PROJECT_ID}`),\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n// firebase.analytics();\n\n//instances\nconst firestore = firebase.firestore();\nconst auth = firebase.auth();\n\n//methods\nexport const authInstance = () => auth;\n\nexport const dbInstance = () => firestore;\n\n// auth.onAuthStateChanged(user => {\n//   if (user) {\n//     console.log(user.email);\n//   } else {\n//     // console.log(\"user is signed out\");\n//     console.log(\"signed out\");\n//   }\n// });\n\n// check logged in info\nexport const checkUser = () => {\n  console.log(auth.currentUser);\n  if(auth.currentUser === null){\n    return false;\n  }\n  else {\n    return true;\n  }\n  return auth.currentUser ? true : false;\n};\n\nvar currentUser = null;\n\nfirebase.auth().onAuthStateChanged(function(user) {\n  if (user) {\n    currentUser = true; \n  } else {\n    // No user is signed in.\n  }\n});\n\n//TODO: registerdaki ve signindeki fonkları buraya taşı\n\n// add blog posts to database\nexport default function addDb(data) {\n  const docRef = firestore.collection(\"blogs\").doc(data.blogSlug);\n\n  docRef\n    .set({\n      blogName: data.blogName,\n      blogDetail: data.blogDetail,\n    })\n    .then(() => console.log(\"Saved\"))\n    .catch(error => console.log(\"Got an error:\" + error));\n}\n"]},"metadata":{},"sourceType":"module"}