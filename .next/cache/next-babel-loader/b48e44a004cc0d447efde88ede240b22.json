{"ast":null,"code":"var _jsxFileName = \"/home/epolat/Desktop/nextJs/website/pages/[postId].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useRouter } from \"next/router\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Post = ({\n  post\n}) => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"article\", {\n    className: \"jsx-1020667916\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"section\", {\n    id: \"post-section\",\n    className: \"jsx-1020667916\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-1020667916\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, post.title), post.details && __jsx(\"p\", {\n    className: \"jsx-1020667916\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: post.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), __jsx(\"p\", {\n    className: \"jsx-1020667916\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, post.slug), __jsx(\"p\", {\n    className: \"jsx-1020667916\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, post.date))), __jsx(_JSXStyle, {\n    id: \"1020667916\",\n    __self: this\n  }, \"#post-section.jsx-1020667916{color:white;text-align:center;margin:10%;padding:1%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL1twb3N0SWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCa0IsQUFHdUIsWUFDTSxrQkFDUCxXQUNBLFdBQ2IiLCJmaWxlIjoiL2hvbWUvZXBvbGF0L0Rlc2t0b3AvbmV4dEpzL3dlYnNpdGUvcGFnZXMvW3Bvc3RJZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dFwiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJpc29tb3JwaGljLXVuZmV0Y2hcIjtcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5cbmNvbnN0IFBvc3QgPSAoeyBwb3N0IH0pID0+IHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxhcnRpY2xlPlxuICAgICAgICA8c2VjdGlvbiBpZD1cInBvc3Qtc2VjdGlvblwiPlxuICAgICAgICAgIDxoMT57cG9zdC50aXRsZX08L2gxPlxuICAgICAgICAgIHtwb3N0LmRldGFpbHMgJiYgKFxuICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cG9zdC5kZXRhaWxzfSAvPlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICl9XG4gICAgICAgICAgPHA+e3Bvc3Quc2x1Z308L3A+XG4gICAgICAgICAgPHA+e3Bvc3QuZGF0ZX08L3A+XG4gICAgICAgIDwvc2VjdGlvbj5cbiAgICAgIDwvYXJ0aWNsZT5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgI3Bvc3Qtc2VjdGlvbiB7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW46IDEwJTtcbiAgICAgICAgICBwYWRkaW5nOiAxJTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuUG9zdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBxdWVyeSB9KSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpLyR7cXVlcnkucG9zdElkfWApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4geyBwb3N0OiBkYXRhLnBvc3QgfTtcbn07XG5cbi8veWVuaSBhcGkgZW5kLXBvaW50IG9sdcWfdHVyIChwb3N0SWQgYWxhbilcbi8vYnVyYWRhIGdldGluaXRpYWxwcm9wcydsYSBwb3N0SWQneWxlIHBvc3QgYXlyxLFudMSxc8SxIGFsLlxuXG5leHBvcnQgZGVmYXVsdCBQb3N0O1xuIl19 */\\n/*@ sourceURL=/home/epolat/Desktop/nextJs/website/pages/[postId].js */\"));\n};\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await fetch(`http://localhost:3000/api/${query.postId}`);\n  const data = await res.json();\n  return {\n    post: data.post\n  };\n}; //yeni api end-point oluştur (postId alan)\n//burada getinitialprops'la postId'yle post ayrıntısı al.\n\n\nexport default Post;","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/[postId].js"],"names":["Layout","fetch","useRouter","ReactMarkdown","Post","post","router","title","details","slug","date","getInitialProps","query","res","postId","data","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAI,CAACE,KAAV,CADF,EAEGF,IAAI,CAACG,OAAL,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,IAAI,CAACG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,IAAT,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,IAAI,CAACK,IAAT,CARF,CADF,CADF;AAAA;AAAA;AAAA,w+DADF;AAwBD,CA1BD;;AA4BAN,IAAI,CAACO,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAE,6BAA4BW,KAAK,CAACE,MAAO,EAA3C,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AAAEX,IAAAA,IAAI,EAAEU,IAAI,CAACV;AAAb,GAAP;AACD,CALD,C,CAOA;AACA;;;AAEA,eAAeD,IAAf","sourcesContent":["import Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useRouter } from \"next/router\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Post = ({ post }) => {\n  const router = useRouter();\n  return (\n    <Layout>\n      <article>\n        <section id=\"post-section\">\n          <h1>{post.title}</h1>\n          {post.details && (\n            <p>\n              <ReactMarkdown source={post.details} />\n            </p>\n          )}\n          <p>{post.slug}</p>\n          <p>{post.date}</p>\n        </section>\n      </article>\n      <style jsx>{`\n        #post-section {\n          color: white;\n          text-align: center;\n          margin: 10%;\n          padding: 1%;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await fetch(`http://localhost:3000/api/${query.postId}`);\n  const data = await res.json();\n\n  return { post: data.post };\n};\n\n//yeni api end-point oluştur (postId alan)\n//burada getinitialprops'la postId'yle post ayrıntısı al.\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}