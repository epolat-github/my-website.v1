{"ast":null,"code":"var _jsxFileName = \"/home/epolat/Desktop/nextJs/website/pages/[postId].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport ReactMarkdown from \"react-markdown\";\nimport { FacebookShareButton, FacebookIcon, RedditShareButton, TwitterShareButton, WhatsappShareButton, WhatsappIcon, TwitterIcon, RedditIcon } from \"react-share\";\n\nconst sharePost = postSlug => {\n  const url = process.env.baseUrl + postSlug;\n  return __jsx(\"div\", {\n    id: \"share-section\",\n    className: \"jsx-1804068754\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(FacebookShareButton, {\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(FacebookIcon, {\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), __jsx(WhatsappShareButton, {\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(WhatsappIcon, {\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), __jsx(TwitterShareButton, {\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(TwitterIcon, {\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), __jsx(RedditShareButton, {\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(RedditIcon, {\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1804068754\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL1twb3N0SWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDa0IiLCJmaWxlIjoiL2hvbWUvZXBvbGF0L0Rlc2t0b3AvbmV4dEpzL3dlYnNpdGUvcGFnZXMvW3Bvc3RJZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dFwiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJpc29tb3JwaGljLXVuZmV0Y2hcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IHtcbiAgRmFjZWJvb2tTaGFyZUJ1dHRvbixcbiAgRmFjZWJvb2tJY29uLFxuICBSZWRkaXRTaGFyZUJ1dHRvbixcbiAgVHdpdHRlclNoYXJlQnV0dG9uLFxuICBXaGF0c2FwcFNoYXJlQnV0dG9uLFxuICBXaGF0c2FwcEljb24sXG4gIFR3aXR0ZXJJY29uLFxuICBSZWRkaXRJY29uXG59IGZyb20gXCJyZWFjdC1zaGFyZVwiO1xuXG5jb25zdCBzaGFyZVBvc3QgPSBwb3N0U2x1ZyA9PiB7XG4gIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52LmJhc2VVcmwgKyBwb3N0U2x1ZztcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGlkPVwic2hhcmUtc2VjdGlvblwiPlxuICAgICAgPEZhY2Vib29rU2hhcmVCdXR0b24gdXJsPXt1cmx9PlxuICAgICAgICA8RmFjZWJvb2tJY29uIHJvdW5kIC8+XG4gICAgICA8L0ZhY2Vib29rU2hhcmVCdXR0b24+XG5cbiAgICAgIDxXaGF0c2FwcFNoYXJlQnV0dG9uIHVybD17dXJsfT5cbiAgICAgICAgPFdoYXRzYXBwSWNvbiByb3VuZCAvPlxuICAgICAgPC9XaGF0c2FwcFNoYXJlQnV0dG9uPlxuXG4gICAgICA8VHdpdHRlclNoYXJlQnV0dG9uIHVybD17dXJsfT5cbiAgICAgICAgPFR3aXR0ZXJJY29uIHJvdW5kIC8+XG4gICAgICA8L1R3aXR0ZXJTaGFyZUJ1dHRvbj5cblxuICAgICAgPFJlZGRpdFNoYXJlQnV0dG9uIHVybD17dXJsfT5cbiAgICAgICAgPFJlZGRpdEljb24gcm91bmQgLz5cbiAgICAgIDwvUmVkZGl0U2hhcmVCdXR0b24+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICNzaGFyZS1zZWN0aW9uIHtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuY29uc3QgUG9zdCA9ICh7IHBvc3QgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8YXJ0aWNsZT5cbiAgICAgICAgPHNlY3Rpb24gaWQ9XCJwb3N0LXNlY3Rpb25cIj5cbiAgICAgICAgICA8aDE+e3Bvc3QgJiYgcG9zdC50aXRsZX08L2gxPlxuICAgICAgICAgIDxwPntwb3N0ICYmIHBvc3QuZGF0ZX08L3A+XG4gICAgICAgICAge3Bvc3QgJiYgcG9zdC5kZXRhaWxzICYmIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cG9zdC5kZXRhaWxzfSAvPn1cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICA8c2VjdGlvbiBpZD1cInNoYXJlLXNlY3Rpb25cIj57cG9zdCAmJiBzaGFyZVBvc3QocG9zdC5zbHVnKX08L3NlY3Rpb24+XG4gICAgICA8L2FydGljbGU+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICNwb3N0LXNlY3Rpb24ge1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbjogMTAlO1xuICAgICAgICAgIG1hcmdpbi10b3A6IDMlO1xuICAgICAgICAgIHBhZGRpbmc6IDElO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXNpemU6IDYwcHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG4gICAgICAgIH1cbiAgICAgICAgcCB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cblBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgcXVlcnksIHJlcSB9KSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52LmJhc2VVcmx9YXBpLyR7cXVlcnkucG9zdElkfWApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4geyBwb3N0OiBkYXRhLnBvc3QgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7XG4iXX0= */\\n/*@ sourceURL=/home/epolat/Desktop/nextJs/website/pages/[postId].js */\"));\n};\n\nconst Post = ({\n  post\n}) => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"article\", {\n    className: \"jsx-3108485105\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"section\", {\n    id: \"post-section\",\n    className: \"jsx-3108485105\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-3108485105\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, post && post.title), __jsx(\"p\", {\n    className: \"jsx-3108485105\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, post && post.date), post && post.details && __jsx(ReactMarkdown, {\n    source: post.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), __jsx(\"section\", {\n    id: \"share-section\",\n    className: \"jsx-3108485105\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, post && sharePost(post.slug))), __jsx(_JSXStyle, {\n    id: \"3108485105\",\n    __self: this\n  }, \"#post-section.jsx-3108485105{color:white;font-size:20px;text-align:center;margin:10%;margin-top:3%;padding:1%;}h1.jsx-3108485105{font-size:60px;font-weight:bold;color:white;background-color:grey;}p.jsx-3108485105{-webkit-text-decoration:underline;text-decoration:underline;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL1twb3N0SWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Ea0IsQUFHdUIsQUFRRyxBQU1XLFlBYlgsR0FRRSxZQVBDLEtBUU4sWUFDVSxDQVJYLFdBQ0csSUFXaEIsTUFIQSxJQVBhLFdBQ2IiLCJmaWxlIjoiL2hvbWUvZXBvbGF0L0Rlc2t0b3AvbmV4dEpzL3dlYnNpdGUvcGFnZXMvW3Bvc3RJZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dFwiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJpc29tb3JwaGljLXVuZmV0Y2hcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IHtcbiAgRmFjZWJvb2tTaGFyZUJ1dHRvbixcbiAgRmFjZWJvb2tJY29uLFxuICBSZWRkaXRTaGFyZUJ1dHRvbixcbiAgVHdpdHRlclNoYXJlQnV0dG9uLFxuICBXaGF0c2FwcFNoYXJlQnV0dG9uLFxuICBXaGF0c2FwcEljb24sXG4gIFR3aXR0ZXJJY29uLFxuICBSZWRkaXRJY29uXG59IGZyb20gXCJyZWFjdC1zaGFyZVwiO1xuXG5jb25zdCBzaGFyZVBvc3QgPSBwb3N0U2x1ZyA9PiB7XG4gIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52LmJhc2VVcmwgKyBwb3N0U2x1ZztcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGlkPVwic2hhcmUtc2VjdGlvblwiPlxuICAgICAgPEZhY2Vib29rU2hhcmVCdXR0b24gdXJsPXt1cmx9PlxuICAgICAgICA8RmFjZWJvb2tJY29uIHJvdW5kIC8+XG4gICAgICA8L0ZhY2Vib29rU2hhcmVCdXR0b24+XG5cbiAgICAgIDxXaGF0c2FwcFNoYXJlQnV0dG9uIHVybD17dXJsfT5cbiAgICAgICAgPFdoYXRzYXBwSWNvbiByb3VuZCAvPlxuICAgICAgPC9XaGF0c2FwcFNoYXJlQnV0dG9uPlxuXG4gICAgICA8VHdpdHRlclNoYXJlQnV0dG9uIHVybD17dXJsfT5cbiAgICAgICAgPFR3aXR0ZXJJY29uIHJvdW5kIC8+XG4gICAgICA8L1R3aXR0ZXJTaGFyZUJ1dHRvbj5cblxuICAgICAgPFJlZGRpdFNoYXJlQnV0dG9uIHVybD17dXJsfT5cbiAgICAgICAgPFJlZGRpdEljb24gcm91bmQgLz5cbiAgICAgIDwvUmVkZGl0U2hhcmVCdXR0b24+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICNzaGFyZS1zZWN0aW9uIHtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuY29uc3QgUG9zdCA9ICh7IHBvc3QgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8YXJ0aWNsZT5cbiAgICAgICAgPHNlY3Rpb24gaWQ9XCJwb3N0LXNlY3Rpb25cIj5cbiAgICAgICAgICA8aDE+e3Bvc3QgJiYgcG9zdC50aXRsZX08L2gxPlxuICAgICAgICAgIDxwPntwb3N0ICYmIHBvc3QuZGF0ZX08L3A+XG4gICAgICAgICAge3Bvc3QgJiYgcG9zdC5kZXRhaWxzICYmIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cG9zdC5kZXRhaWxzfSAvPn1cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICA8c2VjdGlvbiBpZD1cInNoYXJlLXNlY3Rpb25cIj57cG9zdCAmJiBzaGFyZVBvc3QocG9zdC5zbHVnKX08L3NlY3Rpb24+XG4gICAgICA8L2FydGljbGU+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICNwb3N0LXNlY3Rpb24ge1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbjogMTAlO1xuICAgICAgICAgIG1hcmdpbi10b3A6IDMlO1xuICAgICAgICAgIHBhZGRpbmc6IDElO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXNpemU6IDYwcHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG4gICAgICAgIH1cbiAgICAgICAgcCB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cblBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgcXVlcnksIHJlcSB9KSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52LmJhc2VVcmx9YXBpLyR7cXVlcnkucG9zdElkfWApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4geyBwb3N0OiBkYXRhLnBvc3QgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7XG4iXX0= */\\n/*@ sourceURL=/home/epolat/Desktop/nextJs/website/pages/[postId].js */\"));\n};\n\nPost.getInitialProps = async ({\n  query,\n  req\n}) => {\n  const res = await fetch(`${process.env.baseUrl}api/${query.postId}`);\n  const data = await res.json();\n  return {\n    post: data.post\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/[postId].js"],"names":["Layout","fetch","ReactMarkdown","FacebookShareButton","FacebookIcon","RedditShareButton","TwitterShareButton","WhatsappShareButton","WhatsappIcon","TwitterIcon","RedditIcon","sharePost","postSlug","url","process","env","baseUrl","Post","post","title","date","details","slug","getInitialProps","query","req","res","postId","data","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SACEC,mBADF,EAEEC,YAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,mBALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,UARF,QASO,aATP;;AAWA,MAAMC,SAAS,GAAGC,QAAQ,IAAI;AAC5B,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,GAAsBJ,QAAlC;AACA,SACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,MAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEA,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EASE,MAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAaE,MAAC,iBAAD;AAAmB,IAAA,GAAG,EAAEA,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF;AAAA;AAAA;AAAA,8iGADF;AAuBD,CAzBD;;AA2BA,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,IAAIA,IAAI,CAACC,KAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,IAAIA,IAAI,CAACE,IAAjB,CAFF,EAGGF,IAAI,IAAIA,IAAI,CAACG,OAAb,IAAwB,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,IAAI,CAACG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH3B,CADF,EAME;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,IAAI,IAAIP,SAAS,CAACO,IAAI,CAACI,IAAN,CAA9C,CANF,CADF;AAAA;AAAA;AAAA,g6GADF;AA+BD,CAhCD;;AAkCAL,IAAI,CAACM,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AAC/C,QAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAE,GAAEa,OAAO,CAACC,GAAR,CAAYC,OAAQ,OAAMQ,KAAK,CAACG,MAAO,EAA3C,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AAAEX,IAAAA,IAAI,EAAEU,IAAI,CAACV;AAAb,GAAP;AACD,CALD;;AAOA,eAAeD,IAAf","sourcesContent":["import Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  WhatsappIcon,\n  TwitterIcon,\n  RedditIcon\n} from \"react-share\";\n\nconst sharePost = postSlug => {\n  const url = process.env.baseUrl + postSlug;\n  return (\n    <div id=\"share-section\">\n      <FacebookShareButton url={url}>\n        <FacebookIcon round />\n      </FacebookShareButton>\n\n      <WhatsappShareButton url={url}>\n        <WhatsappIcon round />\n      </WhatsappShareButton>\n\n      <TwitterShareButton url={url}>\n        <TwitterIcon round />\n      </TwitterShareButton>\n\n      <RedditShareButton url={url}>\n        <RedditIcon round />\n      </RedditShareButton>\n      <style jsx>{`\n        #share-section {\n        }\n      `}</style>\n    </div>\n  );\n};\n\nconst Post = ({ post }) => {\n  return (\n    <Layout>\n      <article>\n        <section id=\"post-section\">\n          <h1>{post && post.title}</h1>\n          <p>{post && post.date}</p>\n          {post && post.details && <ReactMarkdown source={post.details} />}\n        </section>\n        <section id=\"share-section\">{post && sharePost(post.slug)}</section>\n      </article>\n      <style jsx>{`\n        #post-section {\n          color: white;\n          font-size: 20px;\n          text-align: center;\n          margin: 10%;\n          margin-top: 3%;\n          padding: 1%;\n        }\n        h1 {\n          font-size: 60px;\n          font-weight: bold;\n          color: white;\n          background-color: grey;\n        }\n        p {\n          text-decoration: underline;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async ({ query, req }) => {\n  const res = await fetch(`${process.env.baseUrl}api/${query.postId}`);\n  const data = await res.json();\n\n  return { post: data.post };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}