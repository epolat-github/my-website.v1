{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/home/epolat/Desktop/nextJs/website/pages/blog.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst pageButtons = postCount => {\n  console.log(postCount);\n  const pageCount = Math.ceil(postCount / 5);\n  return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, pageCount);\n};\n\nconst Blog = ({\n  posts,\n  postCount\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"article\", {\n  id: \"blog-container\",\n  className: \"jsx-435468426\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, posts && posts.map(post => __jsx(\"section\", {\n  key: post.slug,\n  id: \"post-list\",\n  className: \"jsx-435468426\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-435468426\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(Link, {\n  href: post.slug,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-435468426\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, post.title))), post.details && __jsx(ReactMarkdown, {\n  source: post.details,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), __jsx(\"p\", {\n  className: \"jsx-435468426\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Post's date = \", post.date))), pageButtons(postCount)), __jsx(_JSXStyle, {\n  id: \"435468426\",\n  __self: this\n}, \"#post-list.jsx-435468426{color:white;border:2px solid white;border-radius:28%;text-align:center;margin:1% 10%;padding:1% 0;background-color:transparent;}a.jsx-435468426{font-weight:bold;}h1.jsx-435468426{-webkit-text-decoration:underline;text-decoration:underline;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL2Jsb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEJnQixBQUdxQixBQVNLLEFBR1MsWUFYSCxLQVN6QixrQkFSb0Isa0JBQ0EsT0FVcEIsV0FUZ0IsY0FDRCxhQUNnQiw2QkFDL0IiLCJmaWxlIjoiL2hvbWUvZXBvbGF0L0Rlc2t0b3AvbmV4dEpzL3dlYnNpdGUvcGFnZXMvYmxvZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvbGF5b3V0XCI7XG5pbXBvcnQgZmV0Y2ggZnJvbSBcImlzb21vcnBoaWMtdW5mZXRjaFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5cbmNvbnN0IHBhZ2VCdXR0b25zID0gcG9zdENvdW50ID0+IHtcbiAgY29uc29sZS5sb2cocG9zdENvdW50KTtcbiAgY29uc3QgcGFnZUNvdW50ID0gTWF0aC5jZWlsKHBvc3RDb3VudCAvIDUpO1xuICByZXR1cm4gPHA+e3BhZ2VDb3VudH08L3A+O1xufTtcblxuY29uc3QgQmxvZyA9ICh7IHBvc3RzLCBwb3N0Q291bnQgfSkgPT4gKFxuICA8TGF5b3V0PlxuICAgIDxhcnRpY2xlIGlkPVwiYmxvZy1jb250YWluZXJcIj5cbiAgICAgIHtwb3N0cyAmJlxuICAgICAgICBwb3N0cy5tYXAocG9zdCA9PiAoXG4gICAgICAgICAgPHNlY3Rpb24ga2V5PXtwb3N0LnNsdWd9IGlkPVwicG9zdC1saXN0XCI+XG4gICAgICAgICAgICA8aDE+XG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9e3Bvc3Quc2x1Z30+XG4gICAgICAgICAgICAgICAgPGE+e3Bvc3QudGl0bGV9PC9hPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAge3Bvc3QuZGV0YWlscyAmJiA8UmVhY3RNYXJrZG93biBzb3VyY2U9e3Bvc3QuZGV0YWlsc30gLz59XG4gICAgICAgICAgICA8cD5Qb3N0J3MgZGF0ZSA9IHtwb3N0LmRhdGV9PC9wPlxuICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgKSl9XG4gICAgICB7cGFnZUJ1dHRvbnMocG9zdENvdW50KX1cbiAgICA8L2FydGljbGU+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgI3Bvc3QtbGlzdCB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDI4JTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDElIDEwJTtcbiAgICAgICAgcGFkZGluZzogMSUgMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICB9XG4gICAgICBhIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgICBoMSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9MYXlvdXQ+XG4pO1xuXG5CbG9nLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcG9zdHNgKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgcmV0dXJuIHsgcG9zdHM6IGRhdGEucG9zdHMsIHBvc3RDb3VudDogcGFyc2VJbnQoZGF0YS5wb3N0Q291bnQsIDEwKSB9OyAvL3JldHVybnMgYW4gYXJyYXlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJsb2c7XG4iXX0= */\\n/*@ sourceURL=/home/epolat/Desktop/nextJs/website/pages/blog.js */\"));\n\nBlog.getInitialProps = async () => {\n  const res = await fetch(`http://localhost:3000/api/posts`);\n  const data = await res.json();\n  return {\n    posts: data.posts,\n    postCount: _parseInt(data.postCount, 10)\n  }; //returns an array\n};\n\nexport default Blog;","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/blog.js"],"names":["Layout","fetch","Link","ReactMarkdown","pageButtons","postCount","console","log","pageCount","Math","ceil","Blog","posts","map","post","slug","title","details","date","getInitialProps","res","data","json"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,WAAW,GAAGC,SAAS,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,QAAMG,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUL,SAAS,GAAG,CAAtB,CAAlB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,SAAJ,CAAP;AACD,CAJD;;AAMA,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAS,EAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGO,KAAK,IACJA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACZ;AAAS,EAAA,GAAG,EAAEA,IAAI,CAACC,IAAnB;AAAyB,EAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAED,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,KAAT,CADF,CADF,CADF,EAMGF,IAAI,CAACG,OAAL,IAAgB,MAAC,aAAD;AAAe,EAAA,MAAM,EAAEH,IAAI,CAACG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANnB,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBH,IAAI,CAACI,IAAvB,CAPF,CADF,CAFJ,EAaGd,WAAW,CAACC,SAAD,CAbd,CADF;AAAA;AAAA;AAAA,6rFADF;;AAqCAM,IAAI,CAACQ,eAAL,GAAuB,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAE,iCAAF,CAAvB;AACA,QAAMoB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AAAEV,IAAAA,KAAK,EAAES,IAAI,CAACT,KAAd;AAAqBP,IAAAA,SAAS,EAAE,UAASgB,IAAI,CAAChB,SAAd,EAAyB,EAAzB;AAAhC,GAAP,CAJiC,CAIsC;AACxE,CALD;;AAOA,eAAeM,IAAf","sourcesContent":["import Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst pageButtons = postCount => {\n  console.log(postCount);\n  const pageCount = Math.ceil(postCount / 5);\n  return <p>{pageCount}</p>;\n};\n\nconst Blog = ({ posts, postCount }) => (\n  <Layout>\n    <article id=\"blog-container\">\n      {posts &&\n        posts.map(post => (\n          <section key={post.slug} id=\"post-list\">\n            <h1>\n              <Link href={post.slug}>\n                <a>{post.title}</a>\n              </Link>\n            </h1>\n            {post.details && <ReactMarkdown source={post.details} />}\n            <p>Post's date = {post.date}</p>\n          </section>\n        ))}\n      {pageButtons(postCount)}\n    </article>\n    <style jsx>{`\n      #post-list {\n        color: white;\n        border: 2px solid white;\n        border-radius: 28%;\n        text-align: center;\n        margin: 1% 10%;\n        padding: 1% 0;\n        background-color: transparent;\n      }\n      a {\n        font-weight: bold;\n      }\n      h1 {\n        text-decoration: underline;\n      }\n    `}</style>\n  </Layout>\n);\n\nBlog.getInitialProps = async () => {\n  const res = await fetch(`http://localhost:3000/api/posts`);\n  const data = await res.json();\n\n  return { posts: data.posts, postCount: parseInt(data.postCount, 10) }; //returns an array\n};\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}