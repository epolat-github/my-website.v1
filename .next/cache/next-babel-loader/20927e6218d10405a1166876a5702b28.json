{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/home/epolat/Desktop/nextJs/website/pages/blog.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Blog = ({\n  posts,\n  postCount\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"article\", {\n  id: \"blog-container\",\n  className: \"jsx-1820767170\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, posts && posts.map(post => __jsx(\"section\", {\n  key: post.slug,\n  id: \"post-list\",\n  className: \"jsx-1820767170\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-1820767170\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(Link, {\n  href: post.slug,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-1820767170\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, post.title))), post.details && __jsx(ReactMarkdown, {\n  source: post.details,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), __jsx(\"p\", {\n  className: \"jsx-1820767170\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Post's date = \", post.date))), __jsx(\"div\", {\n  id: \"page-button-container\",\n  className: \"jsx-1820767170\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, [...Array(Math.ceil(postCount / 5))].map((curr, index) => __jsx(\"button\", {\n  className: \"jsx-1820767170\" + \" \" + \"page-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, index + 1)))), __jsx(_JSXStyle, {\n  id: \"1820767170\",\n  __self: this\n}, \"#post-list.jsx-1820767170{color:white;border:2px solid white;border-radius:28%;text-align:center;margin:1% 10%;padding:1% 0;background-color:transparent;}a.jsx-1820767170{font-weight:bold;}h1.jsx-1820767170{-webkit-text-decoration:underline;text-decoration:underline;}#page-button-container.jsx-1820767170{display:inline;position:relative;left:40%;margin-bottom:3%;}.page-button.jsx-1820767170{background-color:#4caf50;border:1px solid white;border-radius:50%;color:white;padding:15px 32px;text-align:center;-webkit-text-decoration:none;text-decoration:none;display:inline-block;font-size:25px;cursor:pointer;float:left;}.page-button.jsx-1820767170:hover{background-color:#3e8e41;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL2Jsb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEJnQixBQUdxQixBQVNLLEFBR1MsQUFHWCxBQU1VLEFBYUEsWUFqQ0YsR0FlTCxFQU5wQixRQVl5QixBQWF6QixRQWxCVyxFQWZTLE9BZ0JELE1BS0MsS0FwQkEsTUFnQnBCLENBTkEsTUFXYyxLQXBCRSxPQXFCSSxPQXBCTCxXQXFCSyxFQXBCVyxnQkFxQlIsYUFwQnZCLHFDQXFCdUIscUJBQ04sZUFDQSxlQUNKLFdBQ2IiLCJmaWxlIjoiL2hvbWUvZXBvbGF0L0Rlc2t0b3AvbmV4dEpzL3dlYnNpdGUvcGFnZXMvYmxvZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvbGF5b3V0XCI7XG5pbXBvcnQgZmV0Y2ggZnJvbSBcImlzb21vcnBoaWMtdW5mZXRjaFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5cbmNvbnN0IEJsb2cgPSAoeyBwb3N0cywgcG9zdENvdW50IH0pID0+IChcbiAgPExheW91dD5cbiAgICA8YXJ0aWNsZSBpZD1cImJsb2ctY29udGFpbmVyXCI+XG4gICAgICB7cG9zdHMgJiZcbiAgICAgICAgcG9zdHMubWFwKHBvc3QgPT4gKFxuICAgICAgICAgIDxzZWN0aW9uIGtleT17cG9zdC5zbHVnfSBpZD1cInBvc3QtbGlzdFwiPlxuICAgICAgICAgICAgPGgxPlxuICAgICAgICAgICAgICA8TGluayBocmVmPXtwb3N0LnNsdWd9PlxuICAgICAgICAgICAgICAgIDxhPntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9oMT5cbiAgICAgICAgICAgIHtwb3N0LmRldGFpbHMgJiYgPFJlYWN0TWFya2Rvd24gc291cmNlPXtwb3N0LmRldGFpbHN9IC8+fVxuICAgICAgICAgICAgPHA+UG9zdCdzIGRhdGUgPSB7cG9zdC5kYXRlfTwvcD5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICkpfVxuICAgICAgPGRpdiBpZD1cInBhZ2UtYnV0dG9uLWNvbnRhaW5lclwiPlxuICAgICAgICB7Wy4uLkFycmF5KE1hdGguY2VpbChwb3N0Q291bnQgLyA1KSldLm1hcCgoY3VyciwgaW5kZXgpID0+IChcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInBhZ2UtYnV0dG9uXCI+e2luZGV4ICsgMX08L2J1dHRvbj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2FydGljbGU+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgI3Bvc3QtbGlzdCB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDI4JTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDElIDEwJTtcbiAgICAgICAgcGFkZGluZzogMSUgMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICB9XG4gICAgICBhIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgICBoMSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuICAgICAgI3BhZ2UtYnV0dG9uLWNvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBsZWZ0OiA0MCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMlO1xuICAgICAgfVxuICAgICAgLnBhZ2UtYnV0dG9uIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDsgLyogR3JlZW4gKi9cbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICBwYWRkaW5nOiAxNXB4IDMycHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgIH1cbiAgICAgIC5wYWdlLWJ1dHRvbjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzZThlNDE7XG4gICAgICB9XG4gICAgYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cbkJsb2cuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0c2ApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICByZXR1cm4geyBwb3N0czogZGF0YS5wb3N0cywgcG9zdENvdW50OiBwYXJzZUludChkYXRhLnBvc3RDb3VudCwgMTApIH07IC8vcmV0dXJucyBhbiBhcnJheVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQmxvZztcbiJdfQ== */\\n/*@ sourceURL=/home/epolat/Desktop/nextJs/website/pages/blog.js */\"));\n\nBlog.getInitialProps = async () => {\n  const res = await fetch(`http://localhost:3000/api/posts`);\n  const data = await res.json();\n  return {\n    posts: data.posts,\n    postCount: _parseInt(data.postCount, 10)\n  }; //returns an array\n};\n\nexport default Blog;","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/blog.js"],"names":["Layout","fetch","Link","ReactMarkdown","Blog","posts","postCount","map","post","slug","title","details","date","Array","Math","ceil","curr","index","getInitialProps","res","data","json"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAS,EAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,IACJA,KAAK,CAACE,GAAN,CAAUC,IAAI,IACZ;AAAS,EAAA,GAAG,EAAEA,IAAI,CAACC,IAAnB;AAAyB,EAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAED,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,KAAT,CADF,CADF,CADF,EAMGF,IAAI,CAACG,OAAL,IAAgB,MAAC,aAAD;AAAe,EAAA,MAAM,EAAEH,IAAI,CAACG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANnB,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBH,IAAI,CAACI,IAAvB,CAPF,CADF,CAFJ,EAaE;AAAK,EAAA,EAAE,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC,GAAGC,KAAK,CAACC,IAAI,CAACC,IAAL,CAAUT,SAAS,GAAG,CAAtB,CAAD,CAAT,EAAqCC,GAArC,CAAyC,CAACS,IAAD,EAAOC,KAAP,KACxC;AAAA,sCAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiCA,KAAK,GAAG,CAAzC,CADD,CADH,CAbF,CADF;AAAA;AAAA;AAAA,qhIADF;;AA+DAb,IAAI,CAACc,eAAL,GAAuB,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAMlB,KAAK,CAAE,iCAAF,CAAvB;AACA,QAAMmB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AAAEhB,IAAAA,KAAK,EAAEe,IAAI,CAACf,KAAd;AAAqBC,IAAAA,SAAS,EAAE,UAASc,IAAI,CAACd,SAAd,EAAyB,EAAzB;AAAhC,GAAP,CAJiC,CAIsC;AACxE,CALD;;AAOA,eAAeF,IAAf","sourcesContent":["import Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Blog = ({ posts, postCount }) => (\n  <Layout>\n    <article id=\"blog-container\">\n      {posts &&\n        posts.map(post => (\n          <section key={post.slug} id=\"post-list\">\n            <h1>\n              <Link href={post.slug}>\n                <a>{post.title}</a>\n              </Link>\n            </h1>\n            {post.details && <ReactMarkdown source={post.details} />}\n            <p>Post's date = {post.date}</p>\n          </section>\n        ))}\n      <div id=\"page-button-container\">\n        {[...Array(Math.ceil(postCount / 5))].map((curr, index) => (\n          <button className=\"page-button\">{index + 1}</button>\n        ))}\n      </div>\n    </article>\n    <style jsx>{`\n      #post-list {\n        color: white;\n        border: 2px solid white;\n        border-radius: 28%;\n        text-align: center;\n        margin: 1% 10%;\n        padding: 1% 0;\n        background-color: transparent;\n      }\n      a {\n        font-weight: bold;\n      }\n      h1 {\n        text-decoration: underline;\n      }\n      #page-button-container {\n        display: inline;\n        position: relative;\n        left: 40%;\n        margin-bottom: 3%;\n      }\n      .page-button {\n        background-color: #4caf50; /* Green */\n        border: 1px solid white;\n        border-radius: 50%;\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 25px;\n        cursor: pointer;\n        float: left;\n      }\n      .page-button:hover {\n        background-color: #3e8e41;\n      }\n    `}</style>\n  </Layout>\n);\n\nBlog.getInitialProps = async () => {\n  const res = await fetch(`http://localhost:3000/api/posts`);\n  const data = await res.json();\n\n  return { posts: data.posts, postCount: parseInt(data.postCount, 10) }; //returns an array\n};\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}