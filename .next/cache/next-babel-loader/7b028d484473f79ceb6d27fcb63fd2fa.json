{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport { postList } from \"../../src/blog/postList\";\nimport { dbInstance } from \"../../src/dbCon\";\nexport default ((req, res) => {\n  // const posts = postList(); //array of post obj\n  let firestore = dbInstance();\n  let posts = [];\n  firestore.collection(\"blogs\").get().then(snapshot => snapshot.forEach(doc => {\n    let blogSlug = doc.id;\n    let blogInfo = doc.data();\n    let blogObj = {\n      title: blogInfo.blogName,\n      slug: blogSlug,\n      details: blogInfo.blogDetail,\n      date: \"1 Aralık\"\n    };\n    posts.push(blogObj);\n  }));\n  console.log(posts);\n\n  let page = _parseInt(req.query.page, 10);\n\n  let firstIndex = 5 * (page - 1);\n  let lastIndex = 5 * page;\n\n  if (lastIndex > posts.length) {\n    lastIndex = posts.length;\n  }\n\n  res.status(200).json({\n    posts: posts.slice(firstIndex, lastIndex),\n    postCount: posts.length\n  });\n});","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/api/posts.js"],"names":["postList","dbInstance","req","res","firestore","posts","collection","get","then","snapshot","forEach","doc","blogSlug","id","blogInfo","data","blogObj","title","blogName","slug","details","blogDetail","date","push","console","log","page","query","firstIndex","lastIndex","length","status","json","slice","postCount"],"mappings":";AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B;AACA,MAAIC,SAAS,GAAGH,UAAU,EAA1B;AACA,MAAII,KAAK,GAAG,EAAZ;AACAD,EAAAA,SAAS,CACNE,UADH,CACc,OADd,EAEGC,GAFH,GAGGC,IAHH,CAGQC,QAAQ,IACZA,QAAQ,CAACC,OAAT,CAAiBC,GAAG,IAAI;AACtB,QAAIC,QAAQ,GAAGD,GAAG,CAACE,EAAnB;AACA,QAAIC,QAAQ,GAAGH,GAAG,CAACI,IAAJ,EAAf;AAEA,QAAIC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAEH,QAAQ,CAACI,QADJ;AAEZC,MAAAA,IAAI,EAAEP,QAFM;AAGZQ,MAAAA,OAAO,EAAEN,QAAQ,CAACO,UAHN;AAIZC,MAAAA,IAAI,EAAE;AAJM,KAAd;AAOAjB,IAAAA,KAAK,CAACkB,IAAN,CAAWP,OAAX;AACD,GAZD,CAJJ;AAkBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;;AACA,MAAIqB,IAAI,GAAG,UAASxB,GAAG,CAACyB,KAAJ,CAAUD,IAAnB,EAAyB,EAAzB,CAAX;;AACA,MAAIE,UAAU,GAAG,KAAKF,IAAI,GAAG,CAAZ,CAAjB;AACA,MAAIG,SAAS,GAAG,IAAIH,IAApB;;AACA,MAAIG,SAAS,GAAGxB,KAAK,CAACyB,MAAtB,EAA8B;AAC5BD,IAAAA,SAAS,GAAGxB,KAAK,CAACyB,MAAlB;AACD;;AACD3B,EAAAA,GAAG,CACA4B,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AACJ3B,IAAAA,KAAK,EAAEA,KAAK,CAAC4B,KAAN,CAAYL,UAAZ,EAAwBC,SAAxB,CADH;AAEJK,IAAAA,SAAS,EAAE7B,KAAK,CAACyB;AAFb,GAFR;AAMD,CAnCD","sourcesContent":["import { postList } from \"../../src/blog/postList\";\nimport { dbInstance } from \"../../src/dbCon\";\n\n\nexport default (req, res) => {\n  // const posts = postList(); //array of post obj\n  let firestore = dbInstance();\n  let posts = [];\n  firestore\n    .collection(\"blogs\")\n    .get()\n    .then(snapshot =>\n      snapshot.forEach(doc => {\n        let blogSlug = doc.id;\n        let blogInfo = doc.data();\n\n        let blogObj = {\n          title: blogInfo.blogName,\n          slug: blogSlug,\n          details: blogInfo.blogDetail,\n          date: \"1 Aralık\"\n        };\n\n        posts.push(blogObj);\n      })\n    );\n  console.log(posts);\n  let page = parseInt(req.query.page, 10);\n  let firstIndex = 5 * (page - 1);\n  let lastIndex = 5 * page;\n  if (lastIndex > posts.length) {\n    lastIndex = posts.length;\n  }\n  res\n    .status(200)\n    .json({\n      posts: posts.slice(firstIndex, lastIndex),\n      postCount: posts.length\n    });\n};\n"]},"metadata":{},"sourceType":"module"}