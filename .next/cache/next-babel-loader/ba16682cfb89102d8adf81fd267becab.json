{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/home/epolat/Desktop/projects/website/pages/write.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport addData from \"../src/dbCon\";\nimport { dbInstance, deletePost, authInstance, checkUser } from \"../src/dbCon\";\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst transferData = data => {\n  const firestore = dbInstance();\n  let slug = data.blogSlug;\n  let name = data.blogName;\n  let detail = data.blogDetail;\n\n  if (slug == \"\" || name == \"\" || detail == \"\") {\n    document.getElementById(\"status\").innerHTML = \"Fill the required areas please.\";\n    return;\n  }\n\n  const post = {\n    blogName: name,\n    blogDetail: detail,\n    blogTime: _Date$now()\n  };\n  const docRef = firestore.collection(\"blogs\").doc(data.blogSlug);\n  docRef.set(post).then(() => {\n    console.log(\"Saved\");\n    document.querySelector(\"p\").innerHTML = __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"`slug: $\", slug, \",`\") + `name: ${name} created.`;\n  }).catch(error => {\n    console.log(\"Got an error:\" + error);\n    document.getElementById(\"status\").innerHTML = `${error.message}`;\n  });\n};\n\nconst handlePostListClick = post => {\n  // change the look\n  let activeListItems = document.querySelector(\".active\");\n  activeListItems ? activeListItems.classList.toggle(\"active\") : null;\n  document.getElementById(post.slug).classList.toggle(\"active\"); // show post\n\n  document.getElementById(\"inputName\").value = post.title;\n  document.getElementById(\"inputDetail\").value = post.details;\n};\n\nconst handlePostDeleteClick = () => {\n  let postTitle = document.getElementById(\"inputName\").value;\n  let promise = deletePost(postTitle);\n  promise.then(() => console.log(\"returned true\")).catch(() => console.log(\"returned false\"));\n};\n\nconst listPosts = posts => {\n  return posts.map(post => {\n    return __jsx(\"button\", {\n      key: post.slug,\n      id: post.slug,\n      onClick: () => handlePostListClick(post),\n      className: \"list-group-item list-group-item-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, post.title);\n  });\n};\n\nconst Write = ({\n  posts\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"container pt-5\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  style: {\n    color: \"white\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"Inspire Someone!\"), __jsx(\"div\", {\n  className: \"form-group pt-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, __jsx(\"input\", {\n  type: \"text\",\n  placeholder: \"Blog Title\",\n  id: \"inputName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n})), __jsx(\"div\", {\n  className: \"form-group pt-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, __jsx(\"textarea\", {\n  id: \"inputDetail\",\n  className: \"form-control\",\n  rows: \"20\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n})), __jsx(\"button\", {\n  type: \"button\",\n  className: \"btn btn-lg btn-secondary mt-3\",\n  onClick: () => {\n    transferData({\n      blogSlug: document.getElementById(\"inputName\").value.replace(/\\s+/g, \"-\").toLowerCase(),\n      blogName: document.getElementById(\"inputName\").value,\n      blogDetail: document.getElementById(\"inputDetail\").value\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"Post\"), __jsx(\"button\", {\n  type: \"button\",\n  className: \"btn btn-lg btn-secondary mt-3 ml-3\",\n  onClick: () => handlePostDeleteClick(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, \"Delete\")), __jsx(\"div\", {\n  className: \"container post-list-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, __jsx(\"ul\", {\n  id: \"post-list\",\n  className: \"list-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, listPosts(posts))), __jsx(\"div\", {\n  id: \"status-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, __jsx(\"p\", {\n  id: \"status\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n})));\n\nWrite.getInitialProps = async () => {\n  const res = await fetch(`${process.env.baseUrl}api/posts`);\n  const data = await res.json();\n  return {\n    posts: data.posts\n  };\n};\n\nexport default Write;","map":{"version":3,"sources":["/home/epolat/Desktop/projects/website/pages/write.js"],"names":["addData","dbInstance","deletePost","authInstance","checkUser","Layout","fetch","transferData","data","firestore","slug","blogSlug","name","blogName","detail","blogDetail","document","getElementById","innerHTML","post","blogTime","docRef","collection","doc","set","then","console","log","querySelector","catch","error","message","handlePostListClick","activeListItems","classList","toggle","value","title","details","handlePostDeleteClick","postTitle","promise","listPosts","posts","map","Write","color","replace","toLowerCase","getInitialProps","res","process","env","baseUrl","json"],"mappings":"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","sourcesContent":["import addData from \"../src/dbCon\";\nimport { dbInstance, deletePost, authInstance, checkUser } from \"../src/dbCon\";\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst transferData = data => {\n  const firestore = dbInstance();\n\n  let slug = data.blogSlug;\n  let name = data.blogName;\n  let detail = data.blogDetail;\n\n  if (slug == \"\" || name == \"\" || detail == \"\") {\n    document.getElementById(\"status\").innerHTML =\n      \"Fill the required areas please.\";\n    return;\n  }\n\n  const post = { blogName: name, blogDetail: detail, blogTime: Date.now() };\n\n  const docRef = firestore.collection(\"blogs\").doc(data.blogSlug);\n\n  docRef\n    .set(post)\n    .then(() => {\n      console.log(\"Saved\");\n      document.querySelector(\"p\").innerHTML =\n        <strong>`slug: ${slug},`</strong> + `name: ${name} created.`;\n    })\n    .catch(error => {\n      console.log(\"Got an error:\" + error);\n      document.getElementById(\"status\").innerHTML = `${error.message}`;\n    });\n};\n\nconst handlePostListClick = post => {\n  // change the look\n  let activeListItems = document.querySelector(\".active\");\n  activeListItems ? activeListItems.classList.toggle(\"active\") : null;\n  document.getElementById(post.slug).classList.toggle(\"active\");\n\n  // show post\n  document.getElementById(\"inputName\").value = post.title;\n  document.getElementById(\"inputDetail\").value = post.details;\n};\n\nconst handlePostDeleteClick = () => {\n  let postTitle = document.getElementById(\"inputName\").value;\n  let promise = deletePost(postTitle);\n\n  promise\n    .then(() => console.log(\"returned true\"))\n    .catch(() => console.log(\"returned false\"));\n};\n\nconst listPosts = posts => {\n  return posts.map(post => {\n    return (\n      <button\n        key={post.slug}\n        id={post.slug}\n        onClick={() => handlePostListClick(post)}\n        className=\"list-group-item list-group-item-action\"\n      >\n        {post.title}\n      </button>\n    );\n  });\n};\n\nconst Write = ({ posts }) => (\n  <Layout>\n    <div className=\"container pt-5\">\n      <h1 style={{ color: \"white\" }}>Inspire Someone!</h1>\n      <div className=\"form-group pt-3\">\n        <input type=\"text\" placeholder=\"Blog Title\" id=\"inputName\" />\n      </div>\n      <div className=\"form-group pt-3\">\n        <textarea\n          id=\"inputDetail\"\n          className=\"form-control\"\n          rows=\"20\"\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        className=\"btn btn-lg btn-secondary mt-3\"\n        onClick={() => {\n          transferData({\n            blogSlug: document\n              .getElementById(\"inputName\")\n              .value.replace(/\\s+/g, \"-\")\n              .toLowerCase(),\n            blogName: document.getElementById(\"inputName\").value,\n            blogDetail: document.getElementById(\"inputDetail\").value\n          });\n        }}\n      >\n        Post\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-lg btn-secondary mt-3 ml-3\"\n        onClick={() => handlePostDeleteClick()}\n      >\n        Delete\n      </button>\n    </div>\n\n    <div className=\"container post-list-container\">\n      <ul id=\"post-list\" className=\"list-group\">\n        {/* TODO: post slug || başlıklardan oluşan liste => seçince edit ve delete seçenekleri. */}\n        {listPosts(posts)}\n      </ul>\n    </div>\n\n    <div id=\"status-container\">\n      <p id=\"status\"></p>\n    </div>\n  </Layout>\n);\n\nWrite.getInitialProps = async () => {\n  const res = await fetch(`${process.env.baseUrl}api/posts`);\n  const data = await res.json();\n  return {\n    posts: data.posts\n  };\n};\n\nexport default Write;\n"]},"metadata":{},"sourceType":"module"}