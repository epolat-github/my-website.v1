{"ast":null,"code":"var _jsxFileName = \"/home/epolat/Desktop/nextJs/website/pages/mock.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport addData from \"../src/dbCon\";\nimport { dbInstance } from \"../src/dbCon\";\nimport Layout from \"../components/layout\";\n\nvar transferData = function transferData(data) {\n  var slug = data.blogSlug;\n  var name = data.blogName;\n  var detail = data.blogDetail;\n  document.querySelector(p).innerHTML(\"name: \".concat(name, \", detail: \").concat(detail));\n  addData({\n    blogSlug: slug,\n    blogName: name,\n    blogDetail: detail\n  });\n};\n\nfunction getData() {\n  var firestore = dbInstance();\n  firestore.collection(\"blogs\").get().then(function (snapshot) {\n    return snapshot.forEach(function (doc) {\n      var node = document.createElement(doc.id);\n      document.getElementById(\"dsad\").appendChild(node);\n    });\n  })[\"catch\"](function (err) {\n    console.log(\"Error occurred => \", err);\n  });\n} // async function fillData(data) {\n//   await getData().then(snapshot => console.log(snapshot));\n//   let content = document.createTextNode(getData());\n//   document.querySelector(\"#data\").appendChild(content);\n// }\n\n\nvar Mock = function Mock() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Deneme\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Blog Slug\",\n    id: \"inputSlug\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Blog Title\",\n    id: \"inputName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \" \", __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Blog Detail\",\n    id: \"inputDetail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    className: \"submit\",\n    onClick: function onClick() {\n      return addData({\n        blogSlug: document.getElementById(\"inputSlug\").value,\n        blogName: document.getElementById(\"inputName\").value,\n        blogDetail: document.getElementById(\"inputDetail\").value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Submit\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return getData();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Get\"), __jsx(\"div\", {\n    id: \"dsad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Blank input!\"));\n};\n\nexport default Mock;","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/mock.js"],"names":["addData","dbInstance","Layout","transferData","data","slug","blogSlug","name","blogName","detail","blogDetail","document","querySelector","p","innerHTML","getData","firestore","collection","get","then","snapshot","forEach","doc","node","createElement","id","getElementById","appendChild","err","console","log","Mock","color","value"],"mappings":"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","sourcesContent":["import addData from \"../src/dbCon\";\nimport { dbInstance } from \"../src/dbCon\";\nimport Layout from \"../components/layout\";\n\nconst transferData = data => {\n  let slug = data.blogSlug;\n  let name = data.blogName;\n  let detail = data.blogDetail;\n  document.querySelector(p).innerHTML(`name: ${name}, detail: ${detail}`);\n  addData({ blogSlug: slug, blogName: name, blogDetail: detail });\n};\n\nfunction getData() {\n  let firestore = dbInstance();\n  firestore\n    .collection(\"blogs\")\n    .get()\n    .then(snapshot =>\n      snapshot.forEach(doc => {\n          let node = document.createElement(doc.id);\n        document.getElementById(\"dsad\").appendChild(node);\n    })\n    )\n    .catch(err => {\n      console.log(\"Error occurred => \", err);\n    });\n}\n\n// async function fillData(data) {\n//   await getData().then(snapshot => console.log(snapshot));\n//   let content = document.createTextNode(getData());\n//   document.querySelector(\"#data\").appendChild(content);\n// }\n\nconst Mock = () => (\n  <Layout>\n    <h1 style={{ color: \"white\" }}>Deneme</h1>\n    <input type=\"text\" placeholder=\"Blog Slug\" id=\"inputSlug\" />\n    <br />\n    <br />\n    <input type=\"text\" placeholder=\"Blog Title\" id=\"inputName\" />\n    <br />\n    <br /> <input type=\"text\" placeholder=\"Blog Detail\" id=\"inputDetail\" />\n    <br />\n    <br />\n    <button\n      className=\"submit\"\n      onClick={() =>\n        addData({\n          blogSlug: document.getElementById(\"inputSlug\").value,\n          blogName: document.getElementById(\"inputName\").value,\n          blogDetail: document.getElementById(\"inputDetail\").value\n        })\n      }\n    >\n      Submit\n    </button>\n    <button onClick={() => getData()}>Get</button>\n    <div id=\"dsad\"></div>\n    <p style={{ color: \"red\" }}>Blank input!</p>\n  </Layout>\n);\n\nexport default Mock;\n"]},"metadata":{},"sourceType":"module"}