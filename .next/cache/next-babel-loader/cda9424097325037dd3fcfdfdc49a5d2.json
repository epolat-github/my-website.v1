{"ast":null,"code":"const firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-auth\"); // TODO: move config to .env \n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCMm751lQ5J1PiOHFhwMjUQ9ephvrcxb5c\",\n  authDomain: \"website-v1-2ed9b.firebaseapp.com\",\n  databaseURL: \"https://website-v1-2ed9b.firebaseio.com\",\n  projectId: \"website-v1-2ed9b\",\n  storageBucket: \"website-v1-2ed9b.appspot.com\",\n  messagingSenderId: \"699186492876\",\n  appId: \"1:699186492876:web:c7fe7b35e7eaf9d6221969\",\n  measurementId: \"G-CKM1LGKGX5\"\n}; // Initialize Firebase\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} // firebase.analytics();\n//instances\n\n\nconst firestore = firebase.firestore();\nconst auth = firebase.auth(); //methods\n\nexport const authInstance = () => auth;\nexport const dbInstance = () => firestore;\nauth.onAuthStateChanged(user => {\n  if (user) {\n    console.log(user.email);\n  } else {\n    // console.log(\"user is signed out\");\n    alert(\"signed out\");\n  }\n}); // check logged in info\n\nexport const checkUser = () => {\n  return auth.currentUser ? true : false;\n}; //TODO: registerdaki ve signindeki fonkları buraya taşı \n// add blog posts to database\n\nexport default function addDb(data) {\n  const docRef = firestore.collection(\"blogs\").doc(data.blogSlug);\n  docRef.set({\n    blogName: data.blogName,\n    blogDetail: data.blogDetail\n  }).then(() => console.log(\"Saved\")).catch(error => console.log(\"Got an error:\" + error));\n}","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/src/dbCon.js"],"names":["firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","firestore","auth","authInstance","dbInstance","onAuthStateChanged","user","console","log","email","alert","checkUser","currentUser","addDb","data","docRef","collection","doc","blogSlug","set","blogName","blogDetail","then","catch","error"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,wBAAD,CAAP,C,CAEA;;;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,kCAFO;AAGnBC,EAAAA,WAAW,EAAE,yCAHM;AAInBC,EAAAA,SAAS,EAAE,kBAJQ;AAKnBC,EAAAA,aAAa,EAAE,8BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB,C,CAWA;;AACA,IAAI,CAACV,QAAQ,CAACW,IAAT,CAAcC,MAAnB,EAA2B;AACzBZ,EAAAA,QAAQ,CAACa,aAAT,CAAuBX,cAAvB;AACD,C,CACD;AAEA;;;AACA,MAAMY,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AACA,MAAMC,IAAI,GAAGf,QAAQ,CAACe,IAAT,EAAb,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAMD,IAA3B;AAEP,OAAO,MAAME,UAAU,GAAG,MAAMH,SAAzB;AAEPC,IAAI,CAACG,kBAAL,CAAwBC,IAAI,IAAI;AAC9B,MAAIA,IAAJ,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACD,GAFD,MAEO;AACL;AACAC,IAAAA,KAAK,CAAC,YAAD,CAAL;AACD;AACF,CAPD,E,CASA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAQT,IAAI,CAACU,WAAL,GAAmB,IAAnB,GAA0B,KAAlC;AACD,CAFM,C,CAIP;AAEA;;AACA,eAAe,SAASC,KAAT,CAAeC,IAAf,EAAqB;AAClC,QAAMC,MAAM,GAAGd,SAAS,CAACe,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,IAAI,CAACI,QAAvC,CAAf;AAEAH,EAAAA,MAAM,CACHI,GADH,CACO;AACHC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QADZ;AAEHC,IAAAA,UAAU,EAAEP,IAAI,CAACO;AAFd,GADP,EAKGC,IALH,CAKQ,MAAMf,OAAO,CAACC,GAAR,CAAY,OAAZ,CALd,EAMGe,KANH,CAMSC,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAY,kBAAkBgB,KAA9B,CANlB;AAOD","sourcesContent":["const firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\nrequire(\"firebase/firebase-auth\");\n\n// TODO: move config to .env \nvar firebaseConfig = {\n  apiKey: \"AIzaSyCMm751lQ5J1PiOHFhwMjUQ9ephvrcxb5c\",\n  authDomain: \"website-v1-2ed9b.firebaseapp.com\",\n  databaseURL: \"https://website-v1-2ed9b.firebaseio.com\",\n  projectId: \"website-v1-2ed9b\",\n  storageBucket: \"website-v1-2ed9b.appspot.com\",\n  messagingSenderId: \"699186492876\",\n  appId: \"1:699186492876:web:c7fe7b35e7eaf9d6221969\",\n  measurementId: \"G-CKM1LGKGX5\"\n};\n\n// Initialize Firebase\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n// firebase.analytics();\n\n//instances\nconst firestore = firebase.firestore();\nconst auth = firebase.auth();\n\n//methods\nexport const authInstance = () => auth;\n\nexport const dbInstance = () => firestore;\n\nauth.onAuthStateChanged(user => {\n  if (user) {\n    console.log(user.email);\n  } else {\n    // console.log(\"user is signed out\");\n    alert(\"signed out\");\n  }\n});\n\n// check logged in info\nexport const checkUser = () => {\n  return (auth.currentUser ? true : false);\n}\n\n//TODO: registerdaki ve signindeki fonkları buraya taşı \n\n// add blog posts to database\nexport default function addDb(data) {\n  const docRef = firestore.collection(\"blogs\").doc(data.blogSlug);\n\n  docRef\n    .set({\n      blogName: data.blogName,\n      blogDetail: data.blogDetail\n    })\n    .then(() => console.log(\"Saved\"))\n    .catch(error => console.log(\"Got an error:\" + error));\n}\n"]},"metadata":{},"sourceType":"module"}