{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/home/epolat/Desktop/nextJs/website/pages/blog.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Blog = ({\n  posts,\n  postCount,\n  currPage\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"article\", {\n  id: \"blog-container\",\n  className: \"jsx-3286109580\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, posts && posts.map(post => __jsx(\"section\", {\n  key: post.slug,\n  id: \"post-list\",\n  className: \"jsx-3286109580\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-3286109580\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(Link, {\n  href: post.slug,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-3286109580\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, post.title))), post.details && __jsx(ReactMarkdown, {\n  source: post.details,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), __jsx(\"p\", {\n  className: \"jsx-3286109580\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Post's date = \", post.date))), __jsx(\"div\", {\n  id: \"page-button-container\",\n  className: \"jsx-3286109580\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(\"button\", {\n  onClick: () => Router.reload(`/blog?page=${currPage - 1}`),\n  className: \"jsx-3286109580\" + \" \" + \"page-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Previous\"), [...Array(Math.ceil(postCount / 5))].map((curr, index) => __jsx(\"button\", {\n  className: \"jsx-3286109580\" + \" \" + \"page-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, index + 1)), __jsx(\"button\", {\n  onClick: () => Router.reload(`/blog?page=${currPage + 1}`),\n  className: \"jsx-3286109580\" + \" \" + \"page-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Next\"))), __jsx(_JSXStyle, {\n  id: \"3286109580\",\n  __self: this\n}, \"#post-list.jsx-3286109580{color:white;border:2px solid white;border-radius:28%;text-align:center;margin:1% 10%;padding:1% 0;background-color:transparent;}a.jsx-3286109580{font-weight:bold;}h1.jsx-3286109580{-webkit-text-decoration:underline;text-decoration:underline;}#page-button-container.jsx-3286109580{display:block;max-width:600px;margin:auto;}.page-button.jsx-3286109580{background-color:#4caf50;border:1px solid white;border-radius:50%;color:white;padding:15px 32px;text-align:center;-webkit-text-decoration:none;text-decoration:none;display:inline-block;font-size:25px;cursor:pointer;float:left;}.page-button.jsx-3286109580:hover{background-color:#3e8e41;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL2Jsb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkJnQixBQUdxQixBQVNLLEFBR1MsQUFNWixBQUtXLEFBYUEsWUFuQ0YsRUFrQlAsR0FUbEIsUUFjeUIsQUFhekIsS0FqQmMsS0FsQk0sT0FtQnBCLE1BSW9CLEtBdEJBLE9BVXBCLE1BYWMsS0F0QkUsT0F1QkksT0F0QkwsV0F1QkssRUF0QlcsZ0JBdUJSLGFBdEJ2QixxQ0F1QnVCLHFCQUNOLGVBQ0EsZUFDSixXQUNiIiwiZmlsZSI6Ii9ob21lL2Vwb2xhdC9EZXNrdG9wL25leHRKcy93ZWJzaXRlL3BhZ2VzL2Jsb2cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dFwiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJpc29tb3JwaGljLXVuZmV0Y2hcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcblxuY29uc3QgQmxvZyA9ICh7IHBvc3RzLCBwb3N0Q291bnQsIGN1cnJQYWdlIH0pID0+IChcbiAgPExheW91dD5cbiAgICA8YXJ0aWNsZSBpZD1cImJsb2ctY29udGFpbmVyXCI+XG4gICAgICB7cG9zdHMgJiZcbiAgICAgICAgcG9zdHMubWFwKHBvc3QgPT4gKFxuICAgICAgICAgIDxzZWN0aW9uIGtleT17cG9zdC5zbHVnfSBpZD1cInBvc3QtbGlzdFwiPlxuICAgICAgICAgICAgPGgxPlxuICAgICAgICAgICAgICA8TGluayBocmVmPXtwb3N0LnNsdWd9PlxuICAgICAgICAgICAgICAgIDxhPntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9oMT5cbiAgICAgICAgICAgIHtwb3N0LmRldGFpbHMgJiYgPFJlYWN0TWFya2Rvd24gc291cmNlPXtwb3N0LmRldGFpbHN9IC8+fVxuICAgICAgICAgICAgPHA+UG9zdCdzIGRhdGUgPSB7cG9zdC5kYXRlfTwvcD5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICkpfVxuICAgICAgPGRpdiBpZD1cInBhZ2UtYnV0dG9uLWNvbnRhaW5lclwiPlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInBhZ2UtYnV0dG9uXCIgb25DbGljaz17KCkgPT4gUm91dGVyLnJlbG9hZChgL2Jsb2c/cGFnZT0ke2N1cnJQYWdlLTF9YCl9PlByZXZpb3VzPC9idXR0b24+XG4gICAgICAgIHtbLi4uQXJyYXkoTWF0aC5jZWlsKHBvc3RDb3VudCAvIDUpKV0ubWFwKChjdXJyLCBpbmRleCkgPT4gKFxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwicGFnZS1idXR0b25cIj57aW5kZXggKyAxfTwvYnV0dG9uPlxuICAgICAgICApKX1cbiAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwYWdlLWJ1dHRvblwiIG9uQ2xpY2s9eygpID0+IFJvdXRlci5yZWxvYWQoYC9ibG9nP3BhZ2U9JHtjdXJyUGFnZSsxfWApfT5OZXh0PC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2FydGljbGU+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgI3Bvc3QtbGlzdCB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDI4JTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDElIDEwJTtcbiAgICAgICAgcGFkZGluZzogMSUgMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICB9XG4gICAgICBhIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgICBoMSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuICAgICAgI3BhZ2UtYnV0dG9uLWNvbnRhaW5lciB7XG4gICAgICAgIC8qZGlzcGxheTogaW5saW5lO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGxlZnQ6IDQwJTsgKi9cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIH1cbiAgICAgIC5wYWdlLWJ1dHRvbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7IC8qIEdyZWVuICovXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgcGFkZGluZzogMTVweCAzMnB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB9XG4gICAgICAucGFnZS1idXR0b246aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2U4ZTQxO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9MYXlvdXQ+XG4pO1xuXG5CbG9nLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICh7IHF1ZXJ5OiB7IHBhZ2UgPSAxIH0gfSkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0cz9wYWdlPSR7cGFnZX1gKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgcmV0dXJuIHsgcG9zdHM6IGRhdGEucG9zdHMsIHBvc3RDb3VudDogcGFyc2VJbnQoZGF0YS5wb3N0Q291bnQsIDEwKSwgY3VyclBhZ2U6IHBhcnNlSW50KHBhZ2UsMTApIH07IC8vcmV0dXJucyBhbiBhcnJheVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQmxvZztcbiJdfQ== */\\n/*@ sourceURL=/home/epolat/Desktop/nextJs/website/pages/blog.js */\"));\n\nBlog.getInitialProps = async ({\n  query: {\n    page = 1\n  }\n}) => {\n  const res = await fetch(`http://localhost:3000/api/posts?page=${page}`);\n  const data = await res.json();\n  return {\n    posts: data.posts,\n    postCount: _parseInt(data.postCount, 10),\n    currPage: _parseInt(page, 10)\n  }; //returns an array\n};\n\nexport default Blog;","map":{"version":3,"sources":["/home/epolat/Desktop/nextJs/website/pages/blog.js"],"names":["Layout","fetch","Router","Link","ReactMarkdown","Blog","posts","postCount","currPage","map","post","slug","title","details","date","reload","Array","Math","ceil","curr","index","getInitialProps","query","page","res","data","json"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAS,EAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KAAK,IACJA,KAAK,CAACG,GAAN,CAAUC,IAAI,IACZ;AAAS,EAAA,GAAG,EAAEA,IAAI,CAACC,IAAnB;AAAyB,EAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAED,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,KAAT,CADF,CADF,CADF,EAMGF,IAAI,CAACG,OAAL,IAAgB,MAAC,aAAD;AAAe,EAAA,MAAM,EAAEH,IAAI,CAACG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANnB,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBH,IAAI,CAACI,IAAvB,CAPF,CADF,CAFJ,EAaE;AAAK,EAAA,EAAE,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAgC,EAAA,OAAO,EAAE,MAAMZ,MAAM,CAACa,MAAP,CAAe,cAAaP,QAAQ,GAAC,CAAE,EAAvC,CAA/C;AAAA,sCAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAAC,GAAGQ,KAAK,CAACC,IAAI,CAACC,IAAL,CAAUX,SAAS,GAAG,CAAtB,CAAD,CAAT,EAAqCE,GAArC,CAAyC,CAACU,IAAD,EAAOC,KAAP,KACxC;AAAA,sCAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiCA,KAAK,GAAG,CAAzC,CADD,CAFH,EAKE;AAAgC,EAAA,OAAO,EAAE,MAAMlB,MAAM,CAACa,MAAP,CAAe,cAAaP,QAAQ,GAAC,CAAE,EAAvC,CAA/C;AAAA,sCAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CAbF,CADF;AAAA;AAAA;AAAA,ohJADF;;AAmEAH,IAAI,CAACgB,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,GAAG;AAAT;AAAT,CAAP,KAAmC;AACxD,QAAMC,GAAG,GAAG,MAAMvB,KAAK,CAAE,wCAAuCsB,IAAK,EAA9C,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AAAEpB,IAAAA,KAAK,EAAEmB,IAAI,CAACnB,KAAd;AAAqBC,IAAAA,SAAS,EAAE,UAASkB,IAAI,CAAClB,SAAd,EAAyB,EAAzB,CAAhC;AAA8DC,IAAAA,QAAQ,EAAE,UAASe,IAAT,EAAc,EAAd;AAAxE,GAAP,CAJwD,CAI4C;AACrG,CALD;;AAOA,eAAelB,IAAf","sourcesContent":["import Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Blog = ({ posts, postCount, currPage }) => (\n  <Layout>\n    <article id=\"blog-container\">\n      {posts &&\n        posts.map(post => (\n          <section key={post.slug} id=\"post-list\">\n            <h1>\n              <Link href={post.slug}>\n                <a>{post.title}</a>\n              </Link>\n            </h1>\n            {post.details && <ReactMarkdown source={post.details} />}\n            <p>Post's date = {post.date}</p>\n          </section>\n        ))}\n      <div id=\"page-button-container\">\n        <button className=\"page-button\" onClick={() => Router.reload(`/blog?page=${currPage-1}`)}>Previous</button>\n        {[...Array(Math.ceil(postCount / 5))].map((curr, index) => (\n          <button className=\"page-button\">{index + 1}</button>\n        ))}\n        <button className=\"page-button\" onClick={() => Router.reload(`/blog?page=${currPage+1}`)}>Next</button>\n      </div>\n    </article>\n    <style jsx>{`\n      #post-list {\n        color: white;\n        border: 2px solid white;\n        border-radius: 28%;\n        text-align: center;\n        margin: 1% 10%;\n        padding: 1% 0;\n        background-color: transparent;\n      }\n      a {\n        font-weight: bold;\n      }\n      h1 {\n        text-decoration: underline;\n      }\n      #page-button-container {\n        /*display: inline;\n        position: relative;\n        left: 40%; */\n        display: block;\n        max-width: 600px;\n        margin: auto;\n      }\n      .page-button {\n        background-color: #4caf50; /* Green */\n        border: 1px solid white;\n        border-radius: 50%;\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 25px;\n        cursor: pointer;\n        float: left;\n      }\n      .page-button:hover {\n        background-color: #3e8e41;\n      }\n    `}</style>\n  </Layout>\n);\n\nBlog.getInitialProps = async ({ query: { page = 1 } }) => {\n  const res = await fetch(`http://localhost:3000/api/posts?page=${page}`);\n  const data = await res.json();\n\n  return { posts: data.posts, postCount: parseInt(data.postCount, 10), currPage: parseInt(page,10) }; //returns an array\n};\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}