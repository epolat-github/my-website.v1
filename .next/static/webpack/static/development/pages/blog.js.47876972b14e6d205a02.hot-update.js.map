{"version":3,"file":"static/webpack/static/development/pages/blog.js.47876972b14e6d205a02.hot-update.js","sources":["webpack:///./pages/blog.js"],"sourcesContent":["import Layout from \"../components/layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst createCards = post => {\n  return (\n    <div key={post.slug + Math.random()} className=\"cold-md-6 col-lg-4\">\n      <div className=\"card h-100 border-dark text-white bg-dark mb-3\">\n        <div className=\"card-body\">\n          <div className=\"card-block\">\n            <h3 className=\"card-title\">\n              <Link href={post.slug}>\n                <a>{post.title}</a>\n              </Link>\n            </h3>\n            {post.details && (\n              <ReactMarkdown source={post.details.slice(0, 500) + \"...\"} />\n            )}\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <small className=\"text-muted\">{post.date}</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Blog = ({ posts, postCount, currPage }) => (\n  <Layout>\n    <article id=\"blog-container\">\n        <div className=\"row m-4\">\n          {posts && posts.map(post => createCards(post))}\n        </div>\n      {/* {posts &&\n        posts.map(post => (\n          <section key={post.slug + Math.random()} id=\"post-list\">\n            <h1>\n              <Link href={post.slug}>\n                <a>{post.title}</a>\n              </Link>\n            </h1>\n            {post.details && (\n              <ReactMarkdown source={post.details.slice(0, 500) + \"...\"} />\n            )}\n            <p>Post's date = {post.date}</p>\n          </section>\n        ))} */}\n      {/* page buttons */}\n      <div id=\"page-button-container\">\n        <button\n          className=\"page-button\"\n          disabled={currPage <= 1}\n          onClick={() => Router.push(`/blog?page=${currPage - 1}`)}\n        >\n          {`<<`}\n        </button>\n        {[...Array(Math.ceil(postCount / 5))].map((curr, index) => (\n          <button\n            key={\"button\" + index}\n            onClick={() => Router.push(`/blog?page=${index + 1}`)}\n            className=\"page-button\"\n          >\n            {index + 1}\n          </button>\n        ))}\n        <button\n          className=\"page-button\"\n          disabled={currPage >= Math.ceil(postCount / 5)}\n          onClick={() => Router.push(`/blog?page=${currPage + 1}`)}\n        >\n          >>\n        </button>\n      </div>\n    </article>\n    <style jsx>{`\n      #post-list {\n        color: white;\n        border-bottom: 2px solid white;\n        border-radius: 25%;\n        text-align: center;\n        margin: 1% 10%;\n        padding: 1% 0;\n      }\n      a {\n        font-weight: bold;\n      }\n      h1 {\n        text-transform: capitalize;\n      }\n      #page-button-container {\n        /*display: inline;\n        position: relative;\n        left: 40%; */\n        max-width: 600px;\n        margin: 0 auto;\n        transform: translateX(25%);\n      }\n      .page-button {\n        background-color: #4caf50; /* Green */\n        border: 1px solid white;\n        border-radius: 20%;\n        color: white;\n        padding: 10px 16px;\n        margin: 0 3px;\n        //text-align: center;\n        text-decoration: none;\n        //display: inline-block;\n        font-size: 25px;\n        //cursor: pointer;\n        //float: left;\n      }\n      .page-button:hover {\n        background-color: #3e8e41;\n      }\n      .page-button[disabled] {\n        background-color: gray;\n      }\n      @media only screen and (max-width: 600px) {\n        #page-button-container {\n          width: 100%;\n          /* margin: 3% 50%; */\n          display: inline-block;\n          margin-left: 50%;\n          transform: translateX(-40%);\n        }\n      }\n    `}</style>\n  </Layout>\n);\nBlog.getInitialProps = async ({ query: { page = 1 } }) => {\n  const res = await fetch(`${process.env.baseUrl}api/posts?page=${page}`);\n  const data = await res.json();\n  return {\n    posts: data.posts,\n    postCount: parseInt(data.postCount, 10),\n    currPage: parseInt(page, 10)\n  }; //returns an array\n};\n\nexport default Blog;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArCA;AAAA;AAAA;AADA;AACA;AAqGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;AACA;AACA;AAHA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}